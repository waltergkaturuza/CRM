# Generated by Django 5.2.7 on 2025-10-28 07:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('call', 'Phone Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('follow_up', 'Follow Up'), ('proposal', 'Send Proposal'), ('contract', 'Contract Review'), ('custom', 'Custom Task')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_automated', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'db_table': 'tasks',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('customer_created', 'Customer Created'), ('customer_updated', 'Customer Updated'), ('lead_created', 'Lead Created'), ('lead_status_changed', 'Lead Status Changed'), ('deal_created', 'Deal Created'), ('deal_stage_changed', 'Deal Stage Changed'), ('email_received', 'Email Received'), ('task_completed', 'Task Completed'), ('date_based', 'Date Based'), ('manual', 'Manual Trigger')], max_length=30)),
                ('trigger_conditions', models.JSONField(default=dict)),
                ('actions', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='draft', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Workflow',
                'verbose_name_plural': 'Workflows',
                'db_table': 'workflows',
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('trigger_data', models.JSONField(default=dict)),
                ('execution_log', models.JSONField(default=list)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Workflow Execution',
                'verbose_name_plural': 'Workflow Executions',
                'db_table': 'workflow_executions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('lead_scoring', 'Lead Scoring'), ('deal_assignment', 'Deal Assignment'), ('follow_up', 'Follow Up'), ('escalation', 'Escalation'), ('notification', 'Notification'), ('data_enrichment', 'Data Enrichment')], max_length=30)),
                ('conditions', models.JSONField(default=dict)),
                ('actions', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Automation Rule',
                'verbose_name_plural': 'Automation Rules',
                'db_table': 'automation_rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AutomationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('skipped', 'Skipped')], max_length=20)),
                ('input_data', models.JSONField(default=dict)),
                ('output_data', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('execution_time', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_logs', to='automation.automationrule')),
            ],
            options={
                'verbose_name': 'Automation Log',
                'verbose_name_plural': 'Automation Logs',
                'db_table': 'automation_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=300)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('follow_up', 'Follow Up'), ('reminder', 'Reminder'), ('proposal', 'Proposal'), ('contract', 'Contract'), ('newsletter', 'Newsletter'), ('custom', 'Custom')], max_length=20)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True)),
                ('variables', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'email_templates',
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('recipient_segment', models.JSONField(default=dict)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='automation.emailtemplate')),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'db_table': 'email_campaigns',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success'), ('reminder', 'Reminder')], max_length=20)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification'), ('webhook', 'Webhook')], max_length=20)),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_phone', models.CharField(blank=True, max_length=20)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='customers.customer')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]

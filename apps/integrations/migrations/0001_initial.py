# Generated by Django 5.2.7 on 2025-10-28 07:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('integration_type', models.CharField(choices=[('email', 'Email Service'), ('calendar', 'Calendar'), ('crm', 'CRM System'), ('marketing', 'Marketing Platform'), ('support', 'Support System'), ('social', 'Social Media'), ('analytics', 'Analytics'), ('payment', 'Payment Gateway'), ('webhook', 'Webhook'), ('api', 'API Integration')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('provider', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('pending', 'Pending Setup')], default='pending', max_length=20)),
                ('configuration', models.JSONField(default=dict)),
                ('credentials', models.JSONField(default=dict)),
                ('webhook_url', models.URLField(blank=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_frequency', models.PositiveIntegerField(default=3600)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Integration',
                'verbose_name_plural': 'Integrations',
                'db_table': 'integrations',
            },
        ),
        migrations.CreateModel(
            name='EmailIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('gmail', 'Gmail'), ('outlook', 'Microsoft Outlook'), ('yahoo', 'Yahoo Mail'), ('custom_smtp', 'Custom SMTP')], max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('smtp_server', models.CharField(blank=True, max_length=200)),
                ('smtp_port', models.PositiveIntegerField(blank=True, null=True)),
                ('use_tls', models.BooleanField(default=True)),
                ('use_ssl', models.BooleanField(default=False)),
                ('imap_server', models.CharField(blank=True, max_length=200)),
                ('imap_port', models.PositiveIntegerField(blank=True, null=True)),
                ('sync_sent_emails', models.BooleanField(default=True)),
                ('sync_received_emails', models.BooleanField(default=True)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_integration', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Email Integration',
                'verbose_name_plural': 'Email Integrations',
                'db_table': 'email_integrations',
            },
        ),
        migrations.CreateModel(
            name='DataSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sync_type', models.CharField(choices=[('bidirectional', 'Bidirectional'), ('import', 'Import Only'), ('export', 'Export Only')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('error', 'Error'), ('completed', 'Completed')], default='active', max_length=20)),
                ('field_mapping', models.JSONField(default=dict)),
                ('sync_frequency', models.PositiveIntegerField(default=3600)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('next_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_count', models.PositiveIntegerField(default=0)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_syncs', to='integrations.integration')),
                ('target_integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_syncs', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Data Sync',
                'verbose_name_plural': 'Data Syncs',
                'db_table': 'data_syncs',
            },
        ),
        migrations.CreateModel(
            name='CalendarIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('google', 'Google Calendar'), ('outlook', 'Microsoft Outlook'), ('apple', 'Apple Calendar'), ('caldav', 'CalDAV')], max_length=20)),
                ('calendar_id', models.CharField(max_length=200)),
                ('sync_events', models.BooleanField(default=True)),
                ('create_events', models.BooleanField(default=True)),
                ('update_events', models.BooleanField(default=True)),
                ('delete_events', models.BooleanField(default=False)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_integration', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Calendar Integration',
                'verbose_name_plural': 'Calendar Integrations',
                'db_table': 'calendar_integrations',
            },
        ),
        migrations.CreateModel(
            name='APIIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField()),
                ('auth_type', models.CharField(choices=[('none', 'No Authentication'), ('api_key', 'API Key'), ('oauth2', 'OAuth 2.0'), ('basic', 'Basic Authentication'), ('bearer', 'Bearer Token')], max_length=20)),
                ('api_key', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('bearer_token', models.CharField(blank=True, max_length=500)),
                ('headers', models.JSONField(default=dict)),
                ('rate_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='api_integration', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'API Integration',
                'verbose_name_plural': 'API Integrations',
                'db_table': 'api_integrations',
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('warning', 'Warning'), ('info', 'Info')], max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(default=dict)),
                ('execution_time', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Integration Log',
                'verbose_name_plural': 'Integration Logs',
                'db_table': 'integration_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('partial', 'Partial Success')], max_length=20)),
                ('records_processed', models.PositiveIntegerField(default=0)),
                ('records_successful', models.PositiveIntegerField(default=0)),
                ('records_failed', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('execution_time', models.PositiveIntegerField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('data_sync', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='integrations.datasync')),
            ],
            options={
                'verbose_name': 'Sync Log',
                'verbose_name_plural': 'Sync Logs',
                'db_table': 'sync_logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webhook_url', models.URLField()),
                ('secret_key', models.CharField(blank=True, max_length=200)),
                ('events', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('retry_count', models.PositiveIntegerField(default=3)),
                ('timeout_seconds', models.PositiveIntegerField(default=30)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_integration', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Webhook Integration',
                'verbose_name_plural': 'Webhook Integrations',
                'db_table': 'webhook_integrations',
            },
        ),
    ]
